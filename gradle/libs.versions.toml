[versions]
androidAnnotation = "1.1.0"
moshi = "1.13.0"
javaX = "1"
kotlinPoet = "1.8.0"
ksp = "1.7.0-1.0.6"
kotlin = "1.7.0"
agp = "7.2.1"
junit5 = "5.8.2"
detekt = "1.21.0"
kotlinDsl = "2.2.0"
jacoco = "0.8.8"
jsonParser = "0.1.2"
androidBuildTool = "32.0.0"
androidCompile = "32"
targetSdk = "32"
minSdk = "21"
rxjava = "3.1.5"
rxjavaAndroid = "3.0.0"
coroutine = "1.6.4"
turbine = "0.8.0"
androidxTest-junit = "1.1.3"
androidxTest-core = "1.4.0"
roboletric = "4.5.1"
androidLint = "30.2.1"
androidx-compat = "1.4.2"
androidx-activity = "1.5.0"
androidx-lifecycle = "2.5.0"
androidx-constraintlayout = "2.1.4"
androidx-material = "1.5.0"
androidx-recyclerview = "1.2.1"
androidx-collection = "1.2.0"
compose-runtime = "1.1.1"
compose-compiler = "1.2.0"
alatan-bundledata = "0.1.1"
alatan-coroutine = "0.1.1"
alatan-resourceprovider = "0.1.1"
alatan-alerts = "0.1.2"
alatan-rxjava = "0.1.1"
alatan-databinding = "0.1.1"
alatan-preferences = "0.1.4"
dagger = "2.42"


# test
test-powermock = "2.0.9"
test-junit4 = "4.13"
test-mockito = "3.12.4"
test-mockitoKotlin = "3.2.0"

[libraries]
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

common-moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
common-moshiCompiler = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
common-javaX = { module = "javax.inject:javax.inject", version.ref = "javaX" }
common-kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
common-kspProcessingApi = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
common-rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }
common-rxjavaAndroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxjavaAndroid" }
common-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
common-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx.recyclerview" }

compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose.runtime" }
compose-runtimeLiveData = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose.runtime" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose.runtime" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose.runtime" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidAnnotation" }
androidx-compat = { module = "androidx.appcompat:appcompat", version.ref = "androidx.compat" }
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx.activity" }
androidx-composeactivity = { module = "androidx.activity:activity-compose", version.ref = "androidx.activity" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx.constraintlayout" }
androidx-collection = { module = "androidx.collection:collection", version.ref = "androidx.collection" }
androidx-databinding-runtime = { module = "androidx.databinding:databinding-runtime", version.ref = "agp" }
androidx-databinding-common = { module = "androidx.databinding:databinding-common", version.ref = "agp" }

androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx.lifecycle" }
androidx-lifecycle-runtimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx.lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx.lifecycle" }
androidx-lifecycle-viewmodelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx.lifecycle" }
androidx-lifecycle-livedataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx.lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx.lifecycle" }
androidx-lifecycle-jdk8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidx.lifecycle" }

#lint
androidLint-api = { module = "com.android.tools.lint:lint-api", version.ref = "androidLint" }
androidLint-impl = { module = "com.android.tools.lint:lint", version.ref = "androidLint" }
androidLint-test = { module = "com.android.tools.lint:lint-tests", version.ref = "androidLint" }

google-material = { module = "com.google.android.material:material", version.ref = "androidx.material" }

dagger-base = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-baseCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-android = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
dagger-androidCompiler = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }

alatan-preferences-builder = { module = "com.github.android-alatan.preferences:preferences-builder", version.ref = "alatan.preferences" }
alatan-preferences-flow = { module = "com.github.android-alatan.preferences:preferences-adapter-flow", version.ref = "alatan.preferences" }
alatan-preferences-rx = { module = "com.github.android-alatan.preferences:preferences-adapter-rx", version.ref = "alatan.preferences" }
alatan-preferences-annotation = { module = "com.github.android-alatan.preferences:preferences-annotation", version.ref = "alatan.preferences" }
alatan-preferences-api = { module = "com.github.android-alatan.preferences:preferences-adapter-api", version.ref = "alatan.preferences" }

alatan-databinding-impl = { module = "com.github.android-alatan.Databinding:databinding-observables", version.ref = "alatan.databinding" }
alatan-databinding-flow = { module = "com.github.android-alatan.Databinding:databinding-observables-flow", version.ref = "alatan.databinding" }
alatan-databinding-rx = { module = "com.github.android-alatan.Databinding:databinding-observables-rx", version.ref = "alatan.databinding" }
alatan-databinding-compose = { module = "com.github.android-alatan.Databinding:compose-observables-compat", version.ref = "alatan.databinding" }

alatan-bundledata-impl = { module = "com.github.android-alatan.BundleData:bundle-data", version.ref = "alatan.bundledata" }
alatan-bundledata-api = { module = "com.github.android-alatan.BundleData:bundle-data-api", version.ref = "alatan.bundledata" }
alatan-bundledata-assertion = { module = "com.github.android-alatan.BundleData:bundle-data-assertion", version.ref = "alatan.bundledata" }

alatan-rxjava-scheduler-api = { module = "com.github.android-alatan.RxJava-Alatan:rx-scheduler-api", version.ref = "alatan-rxjava" }
alatan-rxjava-scheduler-assertion = { module = "com.github.android-alatan.RxJava-Alatan:rx-scheduler-assertion", version.ref = "alatan-rxjava" }
alatan-rxjava-recyclerviewadapter = { module = "com.github.android-alatan.RxJava-Alatan:rx-recyclerview-adapter", version.ref = "alatan-rxjava" }

alatan-coroutine-dispatcher-api = { module = "com.github.android-alatan.Coroutine-Alatan:coroutine-dispatcher-api", version.ref = "alatan.coroutine" }
alatan-coroutine-dispatcher-assertion = { module = "com.github.android-alatan.Coroutine-Alatan:coroutine-dispatcher-assertion", version.ref = "alatan.coroutine" }

alatan-resourceprovider-impl = { module = "com.github.android-alatan.Resources:resource-provider", version.ref = "alatan.resourceprovider" }
alatan-resourceprovider-api = { module = "com.github.android-alatan.Resources:resource-provider-api", version.ref = "alatan.resourceprovider" }
alatan-resourceprovider-assertion = { module = "com.github.android-alatan.Resources:resource-provider-assertion", version.ref = "alatan.resourceprovider" }

alatan-alerts-common-dialog-api = { module = "com.github.android-alatan.alerts:common-dialog-api", version.ref = "alatan.alerts" }
alatan-alerts-common-dialog-impl = { module = "com.github.android-alatan.alerts:common-dialog", version.ref = "alatan.alerts" }
alatan-alerts-common-dialog-assertion = { module = "com.github.android-alatan.alerts:common-dialog-assertion", version.ref = "alatan.alerts" }
alatan-alerts-compose-dialog-api = { module = "com.github.android-alatan.alerts:compose-dialog-api", version.ref = "alatan.alerts" }
alatan-alerts-compose-dialog-impl = { module = "com.github.android-alatan.alerts:compose-dialog", version.ref = "alatan.alerts" }
alatan-alerts-toast-impl = { module = "com.github.android-alatan.alerts:app-toast", version.ref = "alatan.alerts" }
alatan-alerts-toast-api = { module = "com.github.android-alatan.alerts:app-toast-api", version.ref = "alatan.alerts" }
alatan-alerts-toast-assertion = { module = "com.github.android-alatan.alerts:app-toast-assertion", version.ref = "alatan.alerts" }

# plugin
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
plugin-agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
plugin-jacoco = { module = "org.jacoco:org.jacoco.core", version.ref = "jacoco" }

# test
test-junit5 = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
test-junit4 = { module = "junit:junit", version.ref = "test.junit4" }
test-jupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
test-jupiterVintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }
test-mockito = { module = "org.mockito:mockito-core", version.ref = "test.mockito" }
test-mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "test.mockitoKotlin" }
test-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
test-coroutineTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }
test-robolectric-core = { module = "org.robolectric:robolectric", version.ref = "roboletric" }
test-robolectric-shadow = { module = "org.robolectric:shadowapi", version.ref = "roboletric" }
test-powermock-core = { module = "org.powermock:powermock-core", version.ref = "test.powermock" }
test-powermock-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "test.powermock" }
test-powermock-mockito = { module = "org.powermock:powermock-api-mockito2", version.ref = "test.powermock" }

test-androidxTest-core = { module = "androidx.test:core", version.ref = "androidxTest-core" }
test-androidxTest-runner = { module = "androidx.test:runner", version.ref = "androidxTest-core" }
test-androidxTest-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTest-junit" }

# verify
verify-detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# android-alatn
jsonParser-api = { module = "com.github.android-alatan.JsonParser:json-parser-api", version.ref = "jsonParser" }
jsonParser-impl = { module = "com.github.android-alatan.JsonParser:json-parser", version.ref = "jsonParser" }
jsonParser-factory = { module = "com.github.android-alatan.JsonParser:moshi-adapter-factory", version.ref = "jsonParser" }
jsonParser-ksp = { module = "com.github.android-alatan.JsonParser:moshi-adapter-factory-ksp", version.ref = "jsonParser" }


[plugins]
#agp = { id = "com.android.tools.build", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
androidApp = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }